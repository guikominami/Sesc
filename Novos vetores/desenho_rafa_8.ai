%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.0.0%%For: (gui) ()%%Title: (desenho_rafa_8.ai)%%CreationDate: 06/05/22 14:34%%Canvassize: 16383%%BoundingBox: 64 48 490 815%%HiResBoundingBox: 64.5391 48.6523 489.4268 814.1919%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 298.3623 419.9453 298.3623 419.9453%AI3_TileBox: -8.5 24.5 603.5 816.5%AI3_DocumentPreview: None%AI5_ArtSize: 595.2754 841.8901%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -674 578 0.5 1172 577 26 0 0 66 150 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 72 128 8%%BeginData: 9144 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD09FFCAFFCAFD15FFCAFFCAFFCAFD15FFA8FFA8FD12FFCAFFFFFF%CAFD2DFFA8FD2EFFCAFFFFFFCAFD17FFA8FD12FFCAFFFFFFCAFD05FFCAFD%0FFFCAFFCAFD15FFA8FFFFA8A8FD12FFCAFD09FFCAFD0DFFCAFFFFFFCAFD%17FFA8FD07FFA8FD04FFCAFD05FFCAFFFFFFCAFD05FFCAFD0DFFCAFD04FF%CBCAFD13FFA8FFFFA8A8FD05FFA8FFA8FD08FFCAFD0BFFCAFD07FFCAFFFF%FFCAFD07FFCAFFFFFFCAFD13FFA8FD05FFA8FFA8A8FFCAFFFFFFCAFD05FF%A8FD05FFCAFFCAFD07FFCAFFCAFD05FFCACACAFFFFFFCAFD05FFA8FFA8FD%04FFA8FD08FFA8FFFFFFA8FFA8FD04FFCAFFFFFFCAFD09FFCBFFCBFD05FF%CAFFCAFFFFFFCAFD05FFCAFFCAFFFFFFCAFD07FFA8FFFFFFA8FD05FFA8A8%FD04FFA8FFA8FD04FFCAFFCAFFCAFD05FFCAFFCAFFCAFFCAFD07FFCAFFCA%FFCACACBFFFFFFCAFFCAFFCAFFCAFD05FFA8FFA8FFA8FFA8A8A8FD07FFA8%FFA8FFA8FD06FFCAFFCAFD0BFFCAFD0BFFCAFFCAFD05FFCAFFCAFFCAFD09%FFA8FFA8FFA8FD05FFA8FFFFFFA8FFA8FD08FFCAFFCAFD05FFCAFFFFFFCA%FD0BFFCAFFCAFD05FFCAFFFFFFCAFFCAFD09FFA8FFA8FFA8FD04FFA8A8FF%FFFFA8FD22FFCAFFCBFD05FFCAFFFFFFCAFD0BFFA8FFA8FD05FFA8FD10FF%CAFD05FFCAFD11FFCAFFFFFFCAFD05FFCAFD14FFA8A8FD0EFFCAFFFFFFCA%FD17FFCAFFCAFFCAFD11FFA8FFFFFFA8FFA8FD0EFFCAFD05FFCAFFCAFD11%FFCAFFCAFFFFFFCAFD13FFA8A8FFA8A8FFA8FD2CFFCAFFCBFD11FFA8FFA8%FFFFFFA8FD16FFCAFD13FFCAFFFFFFCAFD11FFA8FFA8FFFFFFA8FD10FFCA%FD05FFCBFD11FFCAFFCAFD05FFCAFD22FFCAFFA8FFCAFD05FFCAFFCAFD0F%FFCAFFCAFD05FFCAFFCAFD0FFFA8FFA8FFFFFFA8FFA8FD14FFCBFFCAFD0D%FFCAFD09FFCAFD0FFFA8FD07FFA8FD0AFFCAFFCAFD09FFCAFD0DFFCAFFFF%FFCAFD05FFCAFFCAFD0DFFA8FD07FFA8FFA8FD0CFFCAFD07FFCAFFCAFFCA%FD0BFFCAFFCAFD08FFCBCAFD0BFFA8FFFFFFA8FD05FFA8FFA8FD0AFFCAFF%CAFFCAFFCAFFCACBCAFFCAFFA8FD09FFCAFFCAFFCAFFCAFFCAFFA8FFFFFF%CAFFCAFD07FFA8FFFFFFA8FFA8FFA8FFA8FFFD04A8FD07FFCAFD0FFFCAFD%25FFA8FFA8FFA8FD07FFA8FD06FFCAFD0DFFCAFD09FFCACACBFD0BFFCACA%CAFD07FFA8A8A8FD0DFFA8FD08FFCAFD17FFCAFD0DFFCAFD17FFA8FD08FF%CACACAFFCAFFCAFFCAFFCAFFCACBCAFD0BFFCAFFCAFFCAFFCAFFCAFFCAFF%CAFD0BFFA8FFA8FFA8FFA8FFA8FFA8FFFFA8A8FD3AFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FDFCFFFD05FFA8FD15FFA8FD1AFFA8FFA8FD13FFA8FFA8FD11%FFA8A8A8FFA8FD05FFA8FD16FFA8FD11FFA8FFFFFFA8FFFFA8A8FD17FFA8%FD12FFA8FFFFFFA8FFFFFFA8FD05FFA8FD06FFA8A8FFA8A8FFFFA8A8FD0C%FFA8FFFFFFA8FD05FFA8A8A8FD14FFA8FFFFFFA8FD05FFA8FFA8FD05FFA8%FFFFFFA8FFFFFFA8FD0DFFA8FD09FFA8FD12FFA8FD07FFA8FFFFFFA8A8A8%FD06FFA8A8FFFFA8FFFFA8FD0DFFA8FFFFFFA8FD05FFA8FD0CFFA8FD05FF%A8FFFFFFA8FFFFFFA8FFA8FFFFFFA8A8A8FFFFFFA8FFA8FD05FFA8FD0DFF%A8FD05FFA8FFFFFFA8FD0CFFA8FFA8FFFFFFA8FD05FFA8FFA8FFA8FD05FF%A8FFA8A8A8FFA8FD07FFA8FD05FFA8A8FD04FFA8FD07FFA8A8A8FFA8FD0A%FFA8FD05FFA8FD09FFA8FD07FFA8FD09FFA8FFA8FD05FFA8FFA8FFFFFFA8%FD07FFA8FD10FFA8FFA8FFA8FFA8FD04FFA8A8FFA8FD09FFA8FFA8A8A8FF%FFFFA8FD07FFA8FFA8A8A8FFA8FFA8A8FD04FFA8FFA8FD10FFA8FFA8FFA8%FD05FFA8FD0DFFA8FFA8FD05FFA8FD07FFA8FFA8FFA8FFFFFFA8FD18FFA8%FFA8A8A8FFFFFFA8FD11FFA8FFFFFFA8A8FD0AFFA8FFA8FFA8FD05FFA8FD%14FFA8FFA8FD05FFA8FD0DFFA8FFA8FD05FFA8FD2CFFA8FFFFFFA8FD0DFF%A8FFA8A8FD14FFA8FD05FFA8FD14FFA8FFA8FD05FFA8FD0BFFA8FD09FFA8%FD0DFFA8FD1AFFA8FFA8FFA8FFFFFFA8A8FD0AFFA8A8FFFFA8A8A8FFA8FF%A8FD0DFFA8FFA8FFA8FFFFFFA8FD12FFA8FFA8FFA8FFA8FFFFFFA8FD09FF%A8FFFFFFA8FD07FFA8FD0BFFA8FD05FFA8FD14FFA8FD07FFA8FD0BFFA8A8%FFFFA8FD05FFA8FFA8FD0BFFA8FD07FFA8FFA8FD10FFA8FD0BFFA8FD0BFF%A8FD09FFA8FD11FFA8FD12FFA8FFFFFFA8FD05FFA8FFA8FD13FFA8FFA8A8%FD0AFFA8FFA8FD05FFA8FFA8FD10FFA8FFA8FD07FFA8FFA8FD13FFA8FFA8%FD07FFA8FFA8FFA8FD38FFA8FD0AFFA8FFFFA8FD07FFA8FFA8FD1AFFA8FF%A8FD13FFA8FFA8FD07FFA8FFA8FD26FFA8FD15FFFD04A8FD10FFA8FFA8FF%A8FD18FFA8FFA8FFA8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD07FF%A8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FD0DFFA8A8FFA8FFA8FFA8FFA8FFFF%FFA8FFA8A8FD04FFA8FFFFFFA8FFFFFFA8FD07FFA8FD05FFA8FFA8FFFFFF%A8FFFFFFA8FD05FFA8FD0CFFA8FD0FFFA8FD05FFA8FD0FFFA8FD05FFA8FD%0DFFA8FD0EFFA8FD0DFFA8FD07FFA8FD0DFFA8FD06FFA8A8FD0BFFA8A8FD%31FFA8FD07FFA8FD0DFFA8FD0EFFA8A8A8FFA8FFA8FFA8FFA8FFA8A8A8FD%07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD09FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FDEFFFA8FD17FFA8FD12FFA8A8FFA8FFFFFFA8A8FD13FFA8FFA8FD14FF%A8A8FFA8FD11FFA8FD07FFA8FD12FFA8FFFFFFA8FFFFA8A8FD0FFFA8FFFF%A8A8FFFFFFA8FD06FFA8A8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FD12FFA8FD%05FFA8FD13FFA8FFFFFFA8FD0DFFA8FD07FFA8FD0AFFA8FFA8FD05FFA8FF%FFFFA8FFFFFFA8FD0FFFA8FFFFFFA8FFFFFFA8FD05FFA8FFA8FFFFFFA8FF%FFFFA8FFA8A8A8FD14FFA8FD05FFA8FFA8FD07FFA8FD09FFA8FD05FFA8FD%05FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0AFFA8A8A8FFFFFFA8FFA8FF%FFFFA8FFA8FFA8FD07FFA8FFA8FFFFFFA8FFA8FFFFFFA8FFA8FFA8FD07FF%A8A8A8FD07FFA8FFA8FD0EFFA8FFA8FD09FFA8FD0DFFA8FD09FFA8FD11FF%A8FD10FFA8FFA8FD07FFA8FFA8FD09FFA8A8A8FFA8FD07FFA8FFA8FD09FF%A8A8A8FD05FFA8FD12FFA8FFFFFFA8FD13FFA8FFA8A8FD04FFA8FFFFFFA8%FD0BFFA8FD18FFA8FFA8FD05FFA8FD0DFFA8FFA8A8A8FD04FFA8A8FD0DFF%A8A8FD04FFA8FD2AFFA8FD07FFA8FD0FFFA8FD18FFA8FFA8FD05FFA8FD11%FFA8FD05FFA8FD0AFFA8A8FFA8FD05FFA8FD12FFA8FFA8A8FD16FFA8FD05%FFA8FD26FFA8FFFFFFA8FD05FFA8FD0DFFA8FFA8FD07FFA8FD09FFA8FFFF%A8A8FFA8FFFFFFA8FD14FFA8FFA8FD11FFA8FFFFFFA8FFA8FFFFFFA8FD09%FFA8FD07FFA8FD12FFA8FFA8FFA8FFA8FFA8A8FFFFA8FD0CFFA8FD04FFA8%FFA8FD0BFFA8FFFFFFA8FD05FFA8FFA8FD12FFA8FD05FFA8FD11FFA8FD07%FFA8FD07FFA8FFA8FFA8FD05FFA8FD12FFA8FFA8A8FD06FFA8FFA8FD09FF%A8A8A8FFA8FD05FFA8FFFFA8A8FD07FFA8FFA8FD07FFA8FFA8FD26FFA8FF%A8FD07FFA8FFA8FD2EFFA8FFA8FD0BFFA8FD07FFA8FFFFFFA8FD11FFA8FF%A8FD30FFA8FFA8FD2EFFA8FFA8FD14FFA8A8FFA8FD11FFA8FFA8FFA8FD2E%FFA8FFA8FFA8FD13FFA8FFA8FD0EFFA8FFFFFFA8FFFFFFA8FFA8FFA8FD09%FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FD05FFA8A8A8FFA8FFA8FFA8FFA8%FD05FFA8FD0EFFA8FFA8FFA8FFA8FD05FFA8FD07FFA8FD0FFFA8FD05FFA8%FD0DFFA8FD0CFFA8FD0FFFA8FD07FFA8FD0DFFA8A8A8FD04FFA8A8FD0CFF%A8A8FD0CFFA8FD0DFFA8FD09FFA8FD13FFA8FD0DFFA8FD0EFFA8FFA8FFFF%FFA8FFFFFFA8FFA8A8FD08FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FD07FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FD0EFFA8FFA8FFA8FFA8FFA8FFA8FFA8FD%0BFFA8FFA8FFA8FFA8FFA8FFA8FFA8FDFCFFFD4EFFA8FFA8FD13FFCAFFCA%FD15FFA8A8A8FD18FFA8FFA8FD11FFCAFFFFFFCAFD13FFA8FFFFFFA8FD05%FFA8FD10FFA8FFFFFFA8FD2BFFA8FD06FFA8A8FD12FFA8FD11FFCAFFFFFF%CAFD13FFA8FFFFFFA8FD05FFA8FFA8FD0EFFA8FFFFFFA8FD11FFCAFFCAFD%07FFCBFD0CFFA8A8FFA8A8FD04FFA8FFA8FD12FFA8FD07FFA8FD09FFCBFF%FFFFCAFD05FFCAFD0DFFA8FFFFFFA8FD14FFA8FFA8FFFFFFA8FD05FFA8FF%A8FFCAFD05FFCAFD05FFCAFD05FFCAFD0BFFA8FD05FFA8FFFFFFA8FD16FF%A8FD05FFA8FFCAFFCAFFFFFFCAFD07FFCAFFFFFFCAFFCBFFFFFFA8FD05FF%A8FD07FFA8FD0AFFA8FFA8FFFFFFA8FD07FFA8FFA8FFFFFFA8FFA8FFCAFF%CAFFCAFFCAFD05FFCAFFCAFFCBFFCAFFFFFFA8FFA8FFFFFFA8FFA8FFFFFF%A8FFA8FFA8FD0CFFA8FFFFFFA8FD05FFA8FFFFFFA8FFA8FFA8FFFFFFCAFF%CAFFCAFD05FFCAFFCAFFFFFFCAFD05FFA8FFA8FFFFFFA8FD05FFA8FFA8FD%0AFFA8A8A8FFA8A8A8FFA8FD07FFA8FFA8FFA8FD05FFCAFFCACACAFFFFFF%CAFFFFFFCAFFCAFD05FFA8FFA8FFA8FFA8A8A8FFFFFFA8FD10FFA8FFFFFF%A8FD05FFA8FFFFFFA8FFA8FD07FFCAFFCBFD05FFCAFFFFFFCAFD09FFA8FF%A8FFA8FD05FFA8FD10FFA8FFA8FFA8FD05FFA8FFFFFFA8FD0BFFCAFFFFFF%CAFD05FFCAFD09FFA8FFFFFFA8FFFFFFA8A8FD13FFA8FD05FFA8FD0FFFCA%FD05FFCAFD11FFA8FD05FFA8FD13FFA8A8FD13FFCAFFFFFFCAFD13FFA8FD%1AFFA8FFA8FFA8FFA8FD11FFCAFFCAFFCAFD0FFFA8FFA8FFA8FFFFFFA8FD%12FFA8FFFFA8FFFFA8FFA8FD0FFFCAFFFFFFCAFFCAFD0DFFA8FFA8FFA8FF%A8FFA8FD14FFA8FFA8FFFFFFA8FD0FFFCAFD13FFA8FD09FFA8FD12FFA8FF%A8FFFFFFA8FFA8FD0BFFCAFFCAFD05FFCAFD0EFFA8FD06FFA8FFA8FD26FF%CAFD09FFCAFD0FFFA8FD07FFA8FD12FFA8FFA8FFFFFFA8FFA8FD08FFCBCA%FFFFFFCAFD05FFCAFFCAFD09FFA8A8A8FFA8FD05FFA8FFFFA8FD11FFA8FF%A8FD0FFFCAFFFFFFCAFD07FFCBFD15FFA8FFA8FD0EFFA8A8A8FD07FFA8FF%A8FD09FFCAFFCAFD07FFCAFFCAFD09FFA8FFA8FD07FFA8FD1CFFA8FFA8FF%A8FD13FFCAFFCAFD11FFA8FFA8FFA8FD0CFFA8FFFFFFA8FFA8A8A8FFA8A8%FFFFFFA8A8FD05FFCACACAFFCAFFCAFFCAFFCAFFFFFFCAFFCAFD07FFA8A8%A8FFA8A8A8FFA8A8A8FFFFA8A8FD1CFFA8FD1BFFA8FD0FFFA8FD0AFFA8A8%A8FD0DFFA8FD06FFCACAFD0BFFCBCBCAFD07FFA8FD0DFFA8FD1AFFA8FD15%FFCAFD15FFA8FD0EFFA8FFA8A8A8FFA8A8A8FFFD05A8FD07FFCACBCAFFCA%CBCAFFCACBCAFFCAFD09FFFD05A8FFA8A8A8FFFD05A8FD08FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(svg827) Ln0 AuUu*u1 D0 R0.75021 0.679683 0.670222 0.90164 0 0 0 XA0 J 0 j 0.256715 w 4 M []0 d0 XR147.2163 214.6826 m125.5874 213.6025 L126.3081 184.4033 L115.853 179.7168 L96.0273 155.5635 L80.165 165.2969 L83.0483 169.9844 L78.7227 177.1943 L66.4673 167.1006 L68.9893 158.4492 L75.478 161.6934 L97.4683 145.8311 L114.771 166.7402 L111.8872 137.1797 L105.7598 108.3418 L94.584 85.9912 L81.2471 85.9912 L79.8047 85.9912 82.3281 74.8145 Y82.3281 63.9648 L90.8633 63.9648 L90.8633 49.0801 L170.2651 49.0801 L170.2651 63.9648 L179.0015 63.9648 L179.0015 74.8145 L169.8994 74.8145 L169.2046 79.502 L152.9829 78.7813 L145.7739 132.4932 L146.1343 168.1807 L151.1812 169.623 L175.3335 147.2734 L202.7295 177.915 L199.126 186.9277 L199.4863 190.1719 L192.9976 193.7764 L190.1143 186.2061 L195.8809 180.4385 L174.9731 158.0879 L157.3096 177.915 L146.4951 183.6816 L147.2163 214.6826 Ls0 D134.9595 129.6104 m139.6445 107.9814 L144.7969 74.8145 L101.6094 74.8145 L115.1318 102.5732 L121.6211 129.25 L134.9595 129.6104 Ls*U1 D0.009216 0.984741 0.976348 0.001129 0.92549 0.12549 0.141176 XA0.722252 w277.1631 216.9512 m255.5332 215.8721 L256.2539 186.6729 L245.8008 181.9854 L228.8633 160.7246 L216.4277 176.1113 L219.3125 180.7988 L214.9854 188.0088 L202.7295 177.915 L205.2529 169.2627 L211.7441 172.5068 L227.4141 148.1006 L244.7188 169.0098 L241.834 139.4492 L228.8564 122.1445 L217.6826 99.7949 L204.3447 99.7949 L202.9023 99.7949 205.4258 88.6201 Y224.5313 88.2598 L238.2305 116.377 L251.5684 131.5186 L264.9063 131.8789 L269.5928 110.25 L274.7432 77.083 L212.2764 77.083 L212.2764 66.2334 L220.8105 66.2334 L220.8105 51.3486 L300.2129 51.3486 L300.2129 66.2334 L308.9492 66.2334 L308.9492 77.083 L299.8467 77.083 L299.1514 81.7715 L282.9307 81.0498 L275.7207 134.7627 L276.0811 170.4502 L281.127 171.8926 L305.2813 149.543 L323.0156 177.2119 L319.4121 186.2217 L319.7725 189.4678 L313.2842 193.0723 L310.4014 185.5029 L316.1689 179.7344 L304.9209 160.3574 L287.2559 180.1836 L276.4414 185.9512 L277.1631 216.9512 Ls0.75021 0.679683 0.670222 0.90164 0 0 0 XA0.256715 w420.4326 217.1045 m398.8047 216.0225 L399.5254 186.8232 L389.0703 182.1377 L369.2432 157.9844 L353.3809 167.7178 L356.2656 172.4043 L357.7188 169.9814 353.6387 176.7822 351.9404 179.6133 C339.6846 169.5186 L342.207 160.8691 L348.6973 164.1113 L370.6855 148.249 L387.9883 169.1602 L385.1055 139.5986 L363.9697 119.5762 L352.7949 97.2246 L339.4551 97.2246 L338.0127 97.2246 340.5361 86.0508 Y359.6426 85.6904 L373.3408 113.8096 L386.6807 128.9482 L400.0166 129.3086 L404.7031 107.6807 L409.8545 74.5156 L347.3877 74.5156 L347.3877 63.665 L355.9209 63.665 L355.9209 48.7803 L435.3232 48.7803 L435.3232 63.665 L444.0596 63.665 L444.0596 74.5156 L434.959 74.5156 L434.2617 79.2012 L418.041 78.4814 L418.9902 134.9131 L419.3525 170.6016 L424.3984 172.043 L438.8184 165.5537 L466.2139 196.1953 L462.6104 205.207 L462.9707 208.4521 L456.4814 212.0576 L453.5967 204.4863 L459.3662 198.7188 L438.458 176.3682 L430.5273 180.333 L419.7109 186.1006 L420.4326 217.1045 Ls151.8403 418.1689 m130.2114 417.0869 L130.9316 387.8887 L120.478 383.2021 L99.9111 375.7363 L90.8506 391.3623 L93.7329 396.0479 L95.187 393.624 91.1064 400.4258 89.4072 403.2588 C77.1509 393.165 L79.6748 384.5137 L86.1636 387.7568 L98.6338 361.9219 L119.3975 370.2256 L116.5122 340.666 L102.0933 349.3154 L90.918 326.9648 L77.5796 326.9648 L76.1377 326.9648 78.6611 315.7891 Y97.7666 315.4297 L105.2891 328.7646 106.1074 332.0986 V118.0864 330.0137 L131.4253 330.374 L136.1099 308.7451 L141.2627 275.5811 L78.793 275.5811 L78.793 264.7295 L87.3281 264.7295 L87.3281 249.8447 L166.7305 249.8447 L166.7305 264.7295 L175.4673 264.7295 L175.4673 275.5811 L166.3652 275.5811 L165.6699 280.2666 L149.4487 279.5469 L150.3984 335.9775 L150.7588 371.666 L155.8057 373.1074 L162.2954 370.5859 L178.3584 394.4277 L174.7549 403.4395 L175.1152 406.6836 L168.6255 410.2891 L165.7422 402.7188 L171.5098 396.9492 L161.9336 381.4004 L151.1191 387.166 L151.8403 418.1689 Ls291.1592 420.1387 m269.5313 419.0557 L270.252 389.8574 L259.7969 385.1709 L242.6904 365.0977 L233.626 380.7246 L236.5127 385.4102 L237.9668 382.9873 233.8857 389.7881 232.1855 392.6191 C219.9287 382.5254 L222.4512 373.874 L228.9404 377.1172 L241.4121 351.2842 L258.7168 372.1934 L255.832 342.6328 L236.0547 339.835 L224.8779 317.4844 L211.542 317.4844 L210.0996 317.4844 212.6221 306.3105 Y231.7295 305.9482 L245.4268 334.0674 L257.4072 331.9834 L270.7432 332.3438 L275.4287 310.7158 L280.583 277.5488 L218.1143 277.5488 L218.1143 266.6982 L226.6475 266.6982 L226.6475 251.8135 L306.0498 251.8135 L306.0498 266.6982 L314.7861 266.6982 L314.7861 277.5488 L305.6836 277.5488 L304.9883 282.2363 L288.7676 281.5156 L289.7188 337.9463 L290.0771 373.6348 L295.125 375.0771 L309.5449 368.5879 L325.6094 392.4297 L322.0039 401.4434 L322.3643 404.6865 L315.877 408.291 L312.9902 400.7207 L318.7578 394.9531 L309.1826 379.4023 L301.2529 383.3682 L290.4375 389.1357 L291.1592 420.1387 Ls416.125 424.0596 m394.4971 422.9775 L395.2188 393.7793 L384.7646 389.0928 L373.5488 384.8848 L364.4863 400.5088 L367.3691 405.1963 L368.8232 402.7725 364.7441 409.5742 363.0459 412.4063 C350.79 402.3125 L353.3115 393.6592 L359.8008 396.9043 L372.2705 371.0703 L383.6836 376.1143 L380.7988 346.5537 L361.9287 353.7275 L350.752 331.376 L337.416 331.376 L335.9736 331.376 338.4961 320.2021 Y357.6016 319.8418 L370.3926 337.9883 L382.374 335.9033 L395.71 336.2646 L400.3955 314.6357 L405.5488 281.4697 L343.0801 281.4697 L343.0801 270.6201 L351.6143 270.6201 L351.6143 255.7354 L431.0166 255.7354 L431.0166 270.6201 L439.752 270.6201 L439.752 281.4697 L430.6514 281.4697 L429.9561 286.1563 L413.7354 285.4355 L414.6826 341.8682 L415.0449 377.5557 L422.4492 384.8271 L434.1484 383.3232 L450.2148 407.165 L446.6094 416.1777 L446.9697 419.4219 L440.4814 423.0283 L437.5967 415.4561 L443.3643 409.6895 L433.7881 394.1377 L425.8594 398.1035 L415.4033 393.0566 L416.125 424.0596 Ls157.9243 612.9868 m136.2959 611.9048 L137.0171 582.707 L126.563 578.0186 L109.4556 557.9463 L100.3931 573.5732 L103.2773 578.2588 L104.7314 575.8369 100.6509 582.6367 98.9507 585.4678 C86.6953 575.374 L89.2183 566.7227 L95.707 569.9658 L108.1782 544.1328 L125.4814 565.041 L122.5981 535.4814 L102.8208 532.6826 L91.6445 510.333 L78.3076 510.333 L76.8662 510.333 79.3892 499.1582 Y98.4951 498.7969 L112.1934 526.915 L124.1719 524.832 L137.5103 525.1924 L142.1958 503.5635 L147.3477 470.3965 L84.8789 470.3965 L84.8789 459.5469 L93.4141 459.5469 L93.4141 444.6621 L172.8154 444.6621 L172.8154 459.5469 L181.5522 459.5469 L181.5522 470.3965 L172.4502 470.3965 L171.7549 475.085 L155.5347 474.3633 L156.4834 530.7959 L156.8438 566.4824 L161.8906 567.9248 L176.3105 561.4365 L192.3755 585.2783 L188.77 594.291 L189.1304 597.5352 L182.6416 601.1406 L179.7583 593.5693 L185.5249 587.8018 L175.9487 572.25 L168.0195 576.2168 L157.2041 581.9844 L157.9243 612.9868 Ls288.7314 617.6133 m267.1016 616.5303 L267.8232 587.332 L257.3682 582.6455 L236.8018 575.1787 L227.7393 590.8047 L230.624 595.4902 L232.0781 593.0674 227.9971 599.8691 226.2969 602.7012 C214.04 592.6064 L216.5645 583.9561 L223.0537 587.1992 L235.5244 561.3652 L256.2881 569.668 L253.4033 540.1074 L238.9834 548.7578 L227.8066 526.4092 L214.4707 526.4092 L213.0283 526.4092 215.5498 515.2324 Y234.6563 514.8721 L242.1787 528.207 242.999 531.541 V254.9785 529.457 L268.3164 529.8184 L273.002 508.1895 L278.1533 475.0225 L215.6826 475.0225 L215.6826 464.1729 L224.2188 464.1729 L224.2188 449.2881 L303.6211 449.2881 L303.6211 464.1729 L312.3584 464.1729 L312.3584 475.0225 L303.2549 475.0225 L302.5615 479.71 L286.3379 478.9893 L287.2891 535.4209 L287.6475 571.1084 L292.6963 572.5508 L299.1846 570.0283 L315.249 593.8701 L311.6455 602.8828 L312.0059 606.127 L305.5156 609.7314 L302.6328 602.1621 L308.4004 596.3926 L298.8242 580.8418 L288.0107 586.6094 L288.7314 617.6133 Ls414.9238 617.2725 m393.2949 616.1914 L394.0156 586.9922 L383.5605 582.3066 L363.7354 558.1533 L347.873 567.8857 L350.7578 572.5732 L352.2119 570.1494 348.1309 576.9492 346.4307 579.7832 C334.1748 569.6885 L336.6992 561.0371 L343.1875 564.2813 L365.1777 548.4189 L382.4805 569.3271 L379.5957 539.7666 L358.459 519.7451 L347.2852 497.3955 L333.9463 497.3955 L332.5039 497.3955 335.0283 486.2188 Y354.1318 485.8584 L367.833 513.9766 L381.1709 529.1172 L394.5107 529.4785 L399.1943 507.8496 L404.3457 474.6846 L341.8779 474.6846 L341.8779 463.832 L350.4111 463.832 L350.4111 448.9482 L429.8154 448.9482 L429.8154 463.832 L438.5508 463.832 L438.5508 474.6846 L429.4492 474.6846 L428.7559 479.3701 L412.5332 478.6504 L413.4834 535.082 L413.8428 570.7695 L418.8906 572.2129 L433.3086 565.7217 L460.7061 596.3633 L457.1006 605.377 L457.4629 608.6211 L450.9717 612.2261 L448.0889 604.6553 L453.8564 598.8867 L432.9482 576.5371 L425.0166 580.5029 L414.2031 586.2715 L414.9238 617.2725 Ls0.009216 0.984741 0.976348 0.001129 0.92549 0.12549 0.141176 XA0.722252 w139.3862 813.6094 m117.7573 812.5278 L118.4771 783.3286 L108.0239 778.6426 L91.0859 757.3799 L78.6509 772.7681 L81.5352 777.4541 L77.2085 784.6641 L64.9526 774.5703 L67.4761 765.9185 L73.9658 769.1626 L89.6382 744.7559 L106.9414 765.6655 L104.0581 736.1045 L91.0806 718.8013 L79.9058 696.4502 L66.5669 696.4502 L65.125 696.4502 67.6479 685.2754 Y86.7549 684.9146 L100.4526 713.0337 L113.791 728.1738 L127.1294 728.5342 L131.8154 706.9053 L136.9678 673.7407 L74.498 673.7407 L74.498 662.8901 L83.0332 662.8901 L83.0332 648.0049 L162.4351 648.0049 L162.4351 662.8901 L171.1724 662.8901 L171.1724 673.7407 L162.0693 673.7407 L161.3745 678.4268 L145.1528 677.7061 L137.9438 731.4189 L138.3042 767.1069 L143.3511 768.5483 L167.5034 746.1992 L185.2407 773.8682 L181.6362 782.8794 L181.9966 786.123 L175.5073 789.7285 L172.624 782.1582 L178.3911 776.3906 L167.144 757.0137 L149.4795 776.8394 L138.665 782.6074 L139.3862 813.6094 Ls287.2793 813.8115 m265.6494 812.7295 L266.3711 783.5303 L255.9189 778.8438 L242.8271 751.4927 L230.3906 766.8809 L233.2773 771.5674 L228.9502 778.7773 L216.6934 768.6836 L219.2158 760.0317 L225.707 763.2754 L241.3789 738.8687 L254.8359 765.8677 L251.9512 736.3076 L244.4238 713.875 L233.2471 691.5249 L219.9092 691.5249 L218.4668 691.5249 220.9912 680.3496 Y240.0967 679.9893 L253.7959 708.1084 L261.6846 728.3765 L275.0234 728.7368 L279.709 707.1084 L284.8623 673.9429 L222.3916 673.9429 L222.3916 663.0918 L230.9277 663.0918 L230.9277 648.208 L310.3301 648.208 L310.3301 663.0918 L319.0654 663.0918 L319.0654 673.9429 L309.9629 673.9429 L309.2695 678.6289 L293.0469 677.9087 L285.8369 731.6211 L286.1973 767.3091 L291.2441 768.751 L309.626 732.9395 L327.3652 760.6084 L323.7607 769.6201 L324.1211 772.8647 L317.6328 776.4692 L314.748 768.8989 L320.5156 763.1313 L309.2676 743.7544 L297.3721 777.0425 L286.5586 782.8101 L287.2793 813.8115 Ls*u0.75021 0.679683 0.670222 0.90164 0 0 0 XA0.256715 w433.7627 810.3931 m412.1328 809.312 L412.8535 780.1123 L402.4023 775.4263 L382.5732 751.2739 L366.7139 761.0063 L369.5967 765.6929 L365.2715 772.9033 L353.0146 762.8101 L355.5391 754.1582 L362.0254 757.4028 L384.0156 741.5396 L401.3184 762.4497 L398.4355 732.8896 L392.3076 704.0498 L381.1328 681.7002 L367.7949 681.7002 L366.3525 681.7002 368.875 670.5249 Y368.875 659.6738 L377.4121 659.6738 L377.4121 644.7896 L456.8125 644.7896 L456.8125 659.6738 L465.5479 659.6738 L465.5479 670.5249 L456.4463 670.5249 L455.7529 675.2109 L439.5322 674.4902 L432.3223 728.2026 L432.6826 763.8906 L437.7285 765.333 L461.8809 742.9829 L489.2783 773.624 L485.6729 782.6362 L486.0352 785.8799 L479.5439 789.4854 L476.6611 781.916 L482.4287 776.1475 L461.5225 753.7974 L443.8574 773.624 L433.043 779.3911 L433.7627 810.3931 Ls0 D421.5078 725.3193 m426.1924 703.6904 L431.3447 670.5249 L388.1572 670.5249 L401.6797 698.2832 L408.168 724.9585 L421.5078 725.3193 Ls*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF